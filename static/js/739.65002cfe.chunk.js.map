{"version":3,"file":"static/js/739.65002cfe.chunk.js","mappings":"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","sources":["hooks/useTrackLocation.js","hooks/useNearbyStores.js","utils/debounce.js","icons/GuitarIcon.js","icons/UserIcon.js","utils/customClusterRenderer.js","hooks/useMarkers.js","components/Maps.js"],"sourcesContent":["import { useEffect, useCallback, useState } from \"react\";\r\n\r\nconst SIGNIFICANT_DISTANCE = 0.005;\r\n\r\nconst useTrackLocation = (handleLocationUpdate, defaultCenter) => {\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n  const [locationError, setLocationError] = useState(null); \r\n\r\n  // compare a users current location with their previous one\r\n  const significantLocationChange = (newLocation, oldLocation) => {\r\n    const deltaLat = newLocation.lat - oldLocation.lat;\r\n    const deltaLng = newLocation.lng - oldLocation.lng;\r\n    return (\r\n      deltaLat * deltaLat + deltaLng * deltaLng >\r\n      SIGNIFICANT_DISTANCE * SIGNIFICANT_DISTANCE\r\n    );\r\n  };\r\n\r\n  const getUserLocation = useCallback(() => {\r\n    if (!navigator.geolocation) {\r\n      console.error(\"Geolocation not supported.\");\r\n      setCurrentLocation(defaultCenter); // Maps.js SF Fallback\r\n      setLocationError(\"Geolocation is not supported by your browser. Please try a different browser or enable location services.\");\r\n      return;\r\n    }\r\n\r\n    // authenticate user's location used in Maps.js\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const newLocation = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        };\r\n        if (\r\n          !currentLocation ||\r\n          significantLocationChange(newLocation, currentLocation)\r\n        ) {\r\n          setCurrentLocation(newLocation);\r\n          handleLocationUpdate(position);\r\n          setLocationError(null); \r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(\"Error getting location\", error);\r\n        setCurrentLocation(defaultCenter); // Maps.js SF Fallback\r\n        // Specific location error messages for user\r\n        switch (error.code) {\r\n          case error.PERMISSION_DENIED:\r\n            setLocationError(\"Location access denied. Please enable your location in the browser.\");\r\n            break;\r\n          case error.POSITION_UNAVAILABLE:\r\n            setLocationError(\"Your location information is unavailable. Please check device settings.\");\r\n            break;\r\n          case error.TIMEOUT:\r\n            setLocationError(\"Timed out while trying to retrieve your location. Please try again.\");\r\n            break;\r\n          default:\r\n            setLocationError(\"An unknown error occurred while trying to get your location.\");\r\n            break;\r\n        }\r\n      }\r\n    );\r\n  }, [currentLocation, handleLocationUpdate, defaultCenter]);\r\n\r\n  useEffect(() => {\r\n    getUserLocation();\r\n  }, [getUserLocation]);\r\n\r\n  return { currentLocation, locationError }; \r\n};\r\n\r\nexport default useTrackLocation;\r\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport { debounce } from \"../utils/debounce.js\";\r\n\r\n// render backend \r\nconst isDev = window.location.hostname === \"localhost\";\r\nconst BASE_URL = isDev\r\n  ? \"http://localhost:5000\"\r\n  : \"https://guitar-store-locator.onrender.com\";\r\n\r\nconst CACHE_EXPIRATION = 10 * 60 * 1000; // 10 minutes\r\n\r\nconst useNearbyStores = () => {\r\n  const [stores, setStores] = useState([]);\r\n  const [storesFetched, setIsStoresFetched] = useState(false);\r\n  const [loading, setLoading] = useState(false); \r\n  const [error, setError] = useState(null); \r\n\r\n  // get nearby stores from google \r\n  const fetchGoogleStoresFromAPI = useCallback(async (location, limit = 10) => {\r\n    const storeUrl = `${BASE_URL}/api/nearbyStores?lat=${location.lat}&lng=${location.lng}&limit=${limit}`;\r\n\r\n    try {\r\n      const response = await fetch(storeUrl);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      if (!Array.isArray(data)) {\r\n        console.error(\"Data fetched from API is not an array\");\r\n        return []; \r\n      }\r\n\r\n      // data source\r\n      const googleResults = data.map(store => ({ ...store, source: 'google' }));\r\n\r\n      const cacheObject = {\r\n        timestamp: Date.now(),\r\n        data: googleResults,\r\n      };\r\n      localStorage.setItem(\"nearbyStores\", JSON.stringify(cacheObject)); \r\n      return googleResults;\r\n    } catch (error) {\r\n      console.error(\"Error fetching data from Google API:\", error);\r\n      setError(error.message); \r\n      return []; \r\n    }\r\n  }, []);\r\n\r\n  // get nearby stores from MongoDB\r\n  const fetchMongoStoresFromAPI = useCallback(async (location, maxDistance = 5000) => {\r\n    const mongoStoreUrl = `${BASE_URL}/api/stores/nearby?lat=${location.lat}&lng=${location.lng}&maxDistance=${maxDistance}`;\r\n\r\n    try {\r\n      const response = await fetch(mongoStoreUrl);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      if (!Array.isArray(data)) {\r\n        console.error(\"Data fetched from MongoDB API is not an array\");\r\n        return [];\r\n      }\r\n      // data source\r\n      return data.map(store => ({ ...store, source: 'mongodb' }));\r\n    } catch (error) {\r\n      console.error(\"Error fetching data from MongoDB:\", error);\r\n      setError(error.message); \r\n      return []; \r\n    }\r\n  }, []);\r\n\r\n\r\n  // get nearby stores from Google and MongoDB\r\n  const fetchNearbyStores = useCallback(\r\n    async (location) => {\r\n      setLoading(true);\r\n      setError(null); \r\n\r\n      let googleResults = [];\r\n      const storedData = localStorage.getItem(\"nearbyStores\"); \r\n      if (!storedData) {\r\n        googleResults = await fetchGoogleStoresFromAPI(location);\r\n      } else {\r\n        try {\r\n          const cacheObject = JSON.parse(storedData);\r\n          if (\r\n            !cacheObject ||\r\n            !Array.isArray(cacheObject.data) ||\r\n            typeof cacheObject.timestamp !== \"number\"\r\n          ) {\r\n            throw new Error(\"Invalid cache format\");\r\n          }\r\n\r\n          const isExpired = Date.now() - cacheObject.timestamp > CACHE_EXPIRATION;\r\n          if (isExpired) {\r\n            googleResults = await fetchGoogleStoresFromAPI(location);\r\n          } else {\r\n            googleResults = cacheObject.data;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error parsing stored Google data or cache expired:\", error);\r\n          googleResults = await fetchGoogleStoresFromAPI(location);\r\n        }\r\n      }\r\n\r\n      const mongoResults = await fetchMongoStoresFromAPI(location);\r\n\r\n      const uniqueStores = new Map();\r\n\r\n      // Add MongoDB stores first (prevent google overlap)\r\n      mongoResults.forEach(store => {\r\n        uniqueStores.set(store.placeId, store);\r\n      });\r\n\r\n      // Add Google stores if place_id not in uniqueStores\r\n      googleResults.forEach(store => {\r\n        if (!uniqueStores.has(store.place_id)) {\r\n          uniqueStores.set(store.place_id, store);\r\n        }\r\n      });\r\n\r\n      setStores(Array.from(uniqueStores.values()));\r\n      setIsStoresFetched(true);\r\n      setLoading(false); // End combined loading\r\n    },\r\n    [fetchGoogleStoresFromAPI, fetchMongoStoresFromAPI]\r\n  );\r\n\r\n  const debouncedFetchNearbyStores = useMemo(\r\n    () => debounce(fetchNearbyStores, 1000),\r\n    [fetchNearbyStores]\r\n  );\r\n\r\n  return {\r\n    stores,\r\n    storesFetched,\r\n    fetchNearbyStores,\r\n    debouncedFetchNearbyStores,\r\n    loading, \r\n    error,   \r\n  };\r\n};\r\n\r\nexport default useNearbyStores;","export function debounce(func, wait) {\r\n  let timeout;\r\n  return (...args) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGuitar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst GuitarIcon = () => (\r\n  <FontAwesomeIcon\r\n    icon={faGuitar}\r\n    size=\"3x\"\r\n    style={{\r\n      color: \"#007bff\",\r\n      cursor: \"pointer\",\r\n    }}\r\n  />\r\n);\r\n\r\nexport default GuitarIcon;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPersonRunning } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst UserIcon = () => (\r\n  <FontAwesomeIcon\r\n    icon={faPersonRunning}\r\n    size=\"3x\"\r\n    style={{ color: \"black\", cursor: \"default\" }}\r\n  />\r\n);\r\n\r\nexport default UserIcon;\r\n","export const customClusterRenderer = ({ count, position }) => {\r\n  const div = document.createElement(\"div\");\r\n\r\n  div.style.background = \"#007bff\";\r\n  div.style.color = \"#fff\";\r\n  div.style.borderRadius = \"50%\";\r\n  div.style.padding = \"10px\";\r\n  div.style.width = \"10px\";\r\n  div.style.height = \"10px\";\r\n  div.style.display = \"flex\";\r\n  div.style.alignItems = \"center\";\r\n  div.style.justifyContent = \"center\";\r\n\r\n  div.textContent = count;\r\n\r\n  return new window.google.maps.marker.AdvancedMarkerElement({\r\n    position,\r\n    content: div,\r\n  });\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport GuitarIcon from \"../icons/GuitarIcon.js\";\r\nimport UserIcon from \"../icons/UserIcon.js\";\r\nimport { customClusterRenderer } from \"../utils/customClusterRenderer.js\";\r\n\r\nconst loadClusterer = () =>\r\n  import(\"@googlemaps/markerclusterer\").then((mod) => mod.MarkerClusterer); \r\n\r\nconst useMarkers = (mapRef, setActiveMarker) => {\r\n  const loadMarkers = useCallback(\r\n    async (stores, currentLocation) => {\r\n      if (!window.google?.maps || !mapRef.current) {\r\n        console.error(\"Google Maps API is not available.\");\r\n        return;\r\n      }\r\n\r\n      // prevent multiple clusters from rendering\r\n      if (mapRef.current.clusterer) {\r\n        mapRef.current.clusterer.clearMarkers();\r\n      }\r\n\r\n      // Clear previous markers\r\n      if (mapRef.current.markers) {\r\n        mapRef.current.markers.forEach((marker) => marker.setMap(null));\r\n      }\r\n\r\n      mapRef.current.markers = [];\r\n\r\n      // Early return for no nearby stores\r\n      if (!stores || stores.length === 0) return;\r\n\r\n      // Create markers for nearby stores\r\n      const { AdvancedMarkerElement } = await window.google.maps.importLibrary(\r\n        \"marker\"\r\n      );\r\n\r\n      const storeMarkers = stores.map((store) => {\r\n        const guitarIcon = document.createElement(\"div\");\r\n        createRoot(guitarIcon).render(<GuitarIcon />);\r\n\r\n        // marker placement based on google or MongoDB data \r\n        const position =\r\n          store.source === 'google'\r\n            ? store.geometry.location \r\n            : { lat: store.location.coordinates[1], lng: store.location.coordinates[0] }; // MongoDB \r\n\r\n\r\n        const marker = new AdvancedMarkerElement({\r\n          position: position,\r\n          title: store.name,\r\n          content: guitarIcon,\r\n        });\r\n\r\n        marker.addListener(\"gmp-click\", () => setActiveMarker(store));\r\n        return marker;\r\n      });\r\n\r\n      // Cluster nearby stores\r\n      const MarkerClusterer = await loadClusterer();\r\n\r\n      mapRef.current.clusterer = new MarkerClusterer({\r\n        markers: storeMarkers,\r\n        map: mapRef.current,\r\n        renderer: {\r\n          render: customClusterRenderer,\r\n        },\r\n      });\r\n\r\n      // User location marker\r\n      const userIcon = document.createElement(\"div\");\r\n      createRoot(userIcon).render(<UserIcon />);\r\n\r\n      const userMarker = new AdvancedMarkerElement({\r\n        map: mapRef.current,\r\n        position: currentLocation,\r\n        content: userIcon,\r\n      });\r\n\r\n      mapRef.current.markers.push(...storeMarkers, userMarker);\r\n    },\r\n    [mapRef, setActiveMarker]\r\n  );\r\n\r\n  return { loadMarkers };\r\n};\r\n\r\nexport default useMarkers;\r\n","import { useState, useCallback, useRef, useEffect, useMemo, lazy, Suspense } from \"react\";\r\nimport { useJsApiLoader } from \"@react-google-maps/api\";\r\nimport \"../index.css\";\r\nimport useTrackLocation from \"../hooks/useTrackLocation.js\";\r\nimport useNearbyStores from \"../hooks/useNearbyStores.js\";\r\nimport useMarkers from \"../hooks/useMarkers.js\";\r\n\r\n// lazy loads\r\nconst MapContainer = lazy(() => import(\"../components/MapContainer.js\")); \r\nconst InfoWindowCard = lazy(() => import(\"../components/InfoWindowCard.js\"));\r\n\r\nconst defaultCenter = { lat: 37.7749, lng: -122.4194 }; // SF fallback\r\nconst googleMapsLibraries = [\"places\", \"marker\"]; \r\n\r\nconst Maps = () => {\r\n  const loaderOptions = useMemo(\r\n    () => ({\r\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n      libraries: googleMapsLibraries,\r\n      mapId: process.env.REACT_APP_MAP_ID,\r\n    }),\r\n    []  \r\n  );\r\n\r\n  const { isLoaded, loadError } = useJsApiLoader(loaderOptions);\r\n  const mapRef = useRef(null);\r\n  const [activeMarker, setActiveMarker] = useState(null);\r\n\r\n  const {\r\n    stores,\r\n    storesFetched,\r\n    fetchNearbyStores,\r\n    debouncedFetchNearbyStores,\r\n    loading: storesLoading, \r\n    error: storesError, \r\n  } = useNearbyStores();\r\n\r\n  // get nearby stores based on user's location\r\n  const handleLocationUpdate = useCallback(\r\n    (position) => {\r\n      const newLocation = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      };\r\n      if (!storesFetched) {\r\n        fetchNearbyStores(newLocation);\r\n      } else {\r\n        debouncedFetchNearbyStores(newLocation); // prevent constant fetch calls\r\n      }\r\n    },\r\n    [storesFetched, debouncedFetchNearbyStores, fetchNearbyStores]\r\n  );\r\n  const { currentLocation, locationError } = useTrackLocation(handleLocationUpdate, defaultCenter); \r\n\r\n  // show stores on map based on user location\r\n  const { loadMarkers } = useMarkers(mapRef, setActiveMarker);\r\n  useEffect(() => {\r\n    if (isLoaded && mapRef.current && stores.length > 0 && currentLocation) {\r\n      loadMarkers(stores, currentLocation);\r\n    }\r\n  }, [isLoaded, stores, currentLocation, loadMarkers]);\r\n\r\n  // pan to user whenever their location changes\r\n  useEffect(() => {\r\n    if (currentLocation && mapRef.current) {\r\n      mapRef.current.panTo(currentLocation);\r\n    }\r\n  }, [currentLocation]);\r\n\r\n  // google maps directions\r\n  const generateDirectionsUrl = useCallback(() => {\r\n    if (!activeMarker || !currentLocation) return \"#\";\r\n    const origin = `${currentLocation.lat},${currentLocation.lng}`;\r\n    const { lat, lng } = activeMarker.geometry.location;\r\n\r\n    return `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${lat},${lng}&destination_place_id=${\r\n      activeMarker.place_id\r\n    }&destination_name=${encodeURIComponent(\r\n      activeMarker.name\r\n    )}&travelmode=driving`;\r\n  }, [activeMarker, currentLocation]);\r\n\r\n  // map loading errors\r\n  if (loadError) return <div>Error loading map</div>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <>\r\n      {storesLoading && (\r\n        <div className=\"find-nearby-stores-message\">Finding nearby stores...</div>\r\n      )}\r\n\r\n      {storesFetched &&\r\n        stores.length === 0 &&\r\n        !locationError &&\r\n        !storesError && (\r\n          <div className=\"no-stores-found-message\">\r\n            No stores found near your location. Try adjusting your location or\r\n            checking back later.\r\n          </div>\r\n        )}\r\n\r\n      {locationError && (\r\n        <div className=\"sf-fallback-error-message\">\r\n          <p>{locationError}</p>\r\n          <p>Displaying stores near San Francisco as a fallback.</p>\r\n        </div>\r\n      )}\r\n      {storesError && (\r\n        <div className=\"stores-fetched-error-message\">\r\n          <p>Error fetching stores: {storesError}. Please try again later.</p>\r\n        </div>\r\n      )}\r\n      {/* Map container styling */}\r\n      <Suspense fallback={<div>Loading Map...</div>}>\r\n        <MapContainer\r\n          mapRef={mapRef}\r\n          currentLocation={currentLocation}\r\n          defaultCenter={defaultCenter}\r\n        >\r\n          {activeMarker && (\r\n            <Suspense fallback={<div>Loading Info...</div>}>\r\n              <InfoWindowCard\r\n                marker={activeMarker}\r\n                onClose={() => setActiveMarker(null)}\r\n                directionsUrl={generateDirectionsUrl()}\r\n              />\r\n            </Suspense>\r\n          )}\r\n        </MapContainer>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Maps;\r\n"],"names":["useTrackLocation","handleLocationUpdate","defaultCenter","currentLocation","setCurrentLocation","useState","locationError","setLocationError","getUserLocation","useCallback","navigator","geolocation","console","error","getCurrentPosition","position","newLocation","lat","coords","latitude","lng","longitude","significantLocationChange","oldLocation","deltaLat","deltaLng","SIGNIFICANT_DISTANCE","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","useEffect","BASE_URL","window","location","hostname","useNearbyStores","stores","setStores","storesFetched","setIsStoresFetched","loading","setLoading","setError","fetchGoogleStoresFromAPI","async","limit","arguments","length","undefined","storeUrl","response","fetch","ok","Error","status","data","json","Array","isArray","googleResults","map","store","source","cacheObject","timestamp","Date","now","localStorage","setItem","JSON","stringify","message","fetchMongoStoresFromAPI","maxDistance","mongoStoreUrl","fetchNearbyStores","storedData","getItem","parse","mongoResults","uniqueStores","Map","forEach","set","placeId","has","place_id","from","values","debouncedFetchNearbyStores","useMemo","func","wait","timeout","_len","args","_key","clearTimeout","setTimeout","debounce","GuitarIcon","_jsx","FontAwesomeIcon","icon","faGuitar","size","style","color","cursor","UserIcon","faPersonRunning","customClusterRenderer","_ref","count","div","document","createElement","background","borderRadius","padding","width","height","display","alignItems","justifyContent","textContent","google","maps","marker","AdvancedMarkerElement","content","useMarkers","mapRef","setActiveMarker","loadMarkers","_window$google","current","clusterer","clearMarkers","markers","setMap","importLibrary","storeMarkers","guitarIcon","createRoot","render","geometry","coordinates","title","name","addListener","MarkerClusterer","then","mod","renderer","userIcon","userMarker","push","MapContainer","lazy","InfoWindowCard","googleMapsLibraries","Maps","loaderOptions","googleMapsApiKey","process","libraries","mapId","isLoaded","loadError","useJsApiLoader","useRef","activeMarker","storesLoading","storesError","panTo","generateDirectionsUrl","origin","encodeURIComponent","children","_jsxs","_Fragment","className","Suspense","fallback","onClose","directionsUrl"],"sourceRoot":""}